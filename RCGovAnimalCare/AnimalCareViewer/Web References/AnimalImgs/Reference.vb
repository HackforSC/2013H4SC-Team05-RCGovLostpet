'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18047
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18047.
'
Namespace AnimalImgs
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="AnimalImgsSoap", [Namespace]:="http://richlandcounty.com/")>  _
    Partial Public Class AnimalImgs
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private RetrieveImageByPathOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAnimalsInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAnimalsInfoCityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAnimalInfoByIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAnimalInfoByIDCityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.AnimalCareViewer.My.MySettings.Default.AnimalCareViewer_AnimalImgs_AnimalImgs
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event RetrieveImageByPathCompleted As RetrieveImageByPathCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAnimalsInfoCompleted As GetAnimalsInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAnimalsInfoCityCompleted As GetAnimalsInfoCityCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAnimalInfoByIDCompleted As GetAnimalInfoByIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAnimalInfoByIDCityCompleted As GetAnimalInfoByIDCityCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://richlandcounty.com/RetrieveImageByPath", RequestNamespace:="http://richlandcounty.com/", ResponseNamespace:="http://richlandcounty.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveImageByPath(ByVal strImagePath As String, ByVal intImgWdth As Integer, ByVal intImgHt As Integer, ByVal intOriginal As Integer) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("RetrieveImageByPath", New Object() {strImagePath, intImgWdth, intImgHt, intOriginal})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveImageByPathAsync(ByVal strImagePath As String, ByVal intImgWdth As Integer, ByVal intImgHt As Integer, ByVal intOriginal As Integer)
            Me.RetrieveImageByPathAsync(strImagePath, intImgWdth, intImgHt, intOriginal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveImageByPathAsync(ByVal strImagePath As String, ByVal intImgWdth As Integer, ByVal intImgHt As Integer, ByVal intOriginal As Integer, ByVal userState As Object)
            If (Me.RetrieveImageByPathOperationCompleted Is Nothing) Then
                Me.RetrieveImageByPathOperationCompleted = AddressOf Me.OnRetrieveImageByPathOperationCompleted
            End If
            Me.InvokeAsync("RetrieveImageByPath", New Object() {strImagePath, intImgWdth, intImgHt, intOriginal}, Me.RetrieveImageByPathOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveImageByPathOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveImageByPathCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveImageByPathCompleted(Me, New RetrieveImageByPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://richlandcounty.com/GetAnimalsInfo", RequestNamespace:="http://richlandcounty.com/", ResponseNamespace:="http://richlandcounty.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAnimalsInfo() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAnimalsInfo", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAnimalsInfoAsync()
            Me.GetAnimalsInfoAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAnimalsInfoAsync(ByVal userState As Object)
            If (Me.GetAnimalsInfoOperationCompleted Is Nothing) Then
                Me.GetAnimalsInfoOperationCompleted = AddressOf Me.OnGetAnimalsInfoOperationCompleted
            End If
            Me.InvokeAsync("GetAnimalsInfo", New Object(-1) {}, Me.GetAnimalsInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAnimalsInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAnimalsInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAnimalsInfoCompleted(Me, New GetAnimalsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://richlandcounty.com/GetAnimalsInfoCity", RequestNamespace:="http://richlandcounty.com/", ResponseNamespace:="http://richlandcounty.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAnimalsInfoCity() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAnimalsInfoCity", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAnimalsInfoCityAsync()
            Me.GetAnimalsInfoCityAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAnimalsInfoCityAsync(ByVal userState As Object)
            If (Me.GetAnimalsInfoCityOperationCompleted Is Nothing) Then
                Me.GetAnimalsInfoCityOperationCompleted = AddressOf Me.OnGetAnimalsInfoCityOperationCompleted
            End If
            Me.InvokeAsync("GetAnimalsInfoCity", New Object(-1) {}, Me.GetAnimalsInfoCityOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAnimalsInfoCityOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAnimalsInfoCityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAnimalsInfoCityCompleted(Me, New GetAnimalsInfoCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://richlandcounty.com/GetAnimalInfoByID", RequestNamespace:="http://richlandcounty.com/", ResponseNamespace:="http://richlandcounty.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAnimalInfoByID(ByVal intAnimalID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAnimalInfoByID", New Object() {intAnimalID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAnimalInfoByIDAsync(ByVal intAnimalID As Integer)
            Me.GetAnimalInfoByIDAsync(intAnimalID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAnimalInfoByIDAsync(ByVal intAnimalID As Integer, ByVal userState As Object)
            If (Me.GetAnimalInfoByIDOperationCompleted Is Nothing) Then
                Me.GetAnimalInfoByIDOperationCompleted = AddressOf Me.OnGetAnimalInfoByIDOperationCompleted
            End If
            Me.InvokeAsync("GetAnimalInfoByID", New Object() {intAnimalID}, Me.GetAnimalInfoByIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAnimalInfoByIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAnimalInfoByIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAnimalInfoByIDCompleted(Me, New GetAnimalInfoByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://richlandcounty.com/GetAnimalInfoByIDCity", RequestNamespace:="http://richlandcounty.com/", ResponseNamespace:="http://richlandcounty.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAnimalInfoByIDCity(ByVal intAnimalID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAnimalInfoByIDCity", New Object() {intAnimalID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAnimalInfoByIDCityAsync(ByVal intAnimalID As Integer)
            Me.GetAnimalInfoByIDCityAsync(intAnimalID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAnimalInfoByIDCityAsync(ByVal intAnimalID As Integer, ByVal userState As Object)
            If (Me.GetAnimalInfoByIDCityOperationCompleted Is Nothing) Then
                Me.GetAnimalInfoByIDCityOperationCompleted = AddressOf Me.OnGetAnimalInfoByIDCityOperationCompleted
            End If
            Me.InvokeAsync("GetAnimalInfoByIDCity", New Object() {intAnimalID}, Me.GetAnimalInfoByIDCityOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAnimalInfoByIDCityOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAnimalInfoByIDCityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAnimalInfoByIDCityCompleted(Me, New GetAnimalInfoByIDCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RetrieveImageByPathCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveImageByPathCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveImageByPathCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAnimalsInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetAnimalsInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAnimalsInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAnimalsInfoCityCompletedEventHandler(ByVal sender As Object, ByVal e As GetAnimalsInfoCityCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAnimalsInfoCityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAnimalInfoByIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetAnimalInfoByIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAnimalInfoByIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetAnimalInfoByIDCityCompletedEventHandler(ByVal sender As Object, ByVal e As GetAnimalInfoByIDCityCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAnimalInfoByIDCityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
